install.packages("ggplot2")
?grep
BiocManager::install("TCGAbiolinks")
BiocManager::install("TCGAbiolinks")
BiocManager::install("TCGAbiolinks")
BiocManager::install("TCGAbiolinks")
BiocManager::install("TCGAbiolinks")
warnings()
library(ggplot2)
x1 = runif(80, 6.0, 9.0)
y1 = runif(80, 2.0, 3.0)
x2 = runif(70, 8.0, 12.0)
y2 = runif(70, 4.0, 8.0)
X = append(x1,x2)
Y = append(y1,y2)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('non-invasive',80), rep('invasive',70))+
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)
datatable
datatable$type <- c(rep('non-invasive',80), rep('invasive',70))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)
x1 =  rnorm(80, mean=8, sd=1)
y1 = runif(80, 2.0, 3.0)
x2 = runif(70, 8.0, 12.0)
y2 = runif(70, 4.0, 8.0)
X = append(x1,x2)
Y = append(y1,y2)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('non-invasive',80), rep('invasive',70))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)
x1 =  rnorm(80, mean=8, sd=1)
y1 = rnorm(80, mean=10, sd=2)
x2 = runif(70, 8.0, 12.0)
y2 = runif(70, 4.0, 8.0)
X = append(x1,x2)
Y = append(y1,y2)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('non-invasive',80), rep('invasive',70))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)
x1 =  rnorm(80, mean=8, sd=1)
y1 = rnorm(80, mean=10, sd=0.5)
x2 = runif(70, 8.0, 12.0)
y2 = runif(70, 4.0, 8.0)
X = append(x1,x2)
Y = append(y1,y2)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('non-invasive',80), rep('invasive',70))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)
x1 =  rnorm(80, mean=8, sd=1)
y1 = rnorm(80, mean=10, sd=0.5)
x2 = rnorm(70, mean=10, sd=0.5)
y2 = rnorm(70, mean=5, sd=1)
X = append(x1,x2)
Y = append(y1,y2)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('non-invasive',80), rep('invasive',70))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)
x1 =  rnorm(80, mean=8, sd=1)
y1 = rnorm(80, mean=10, sd=0.5)
x2 = rnorm(70, mean=10, sd=0.5)
y2 = rnorm(70, mean=7, sd=1)
X = append(x1,x2)
Y = append(y1,y2)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('non-invasive',80), rep('invasive',70))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)+
#geom_text(data = p.value, aes(x = x, y = y, label = text), size = 16,  fontface = 'bold',show.legend = NA)+
#labs(title = 'Segmentation Accuracy in Testset', y = 'dice coefficient', x = NULL)+
#scale_x_discrete(labels= c('Kidney', 'Tumor'))+
#ylim(0,16)+
theme(plot.title = element_text(size = 45,hjust = 0.5, face = 'bold'),
axis.text.x = element_text(size =30),
axis.text.y = element_text(size =30),
axis.title.x = element_text(size = 45),
axis.title.y = element_text(size = 45),
legend.title = element_blank(),
legend.text = element_text(size = 45),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, colour = NA, size=1),
legend.position = '')
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)+
#geom_text(data = p.value, aes(x = x, y = y, label = text), size = 16,  fontface = 'bold',show.legend = NA)+
#labs(title = 'Segmentation Accuracy in Testset', y = 'dice coefficient', x = NULL)+
#scale_x_discrete(labels= c('Kidney', 'Tumor'))+
#ylim(0,16)+
theme(plot.title = element_text(size = 45,hjust = 0.5, face = 'bold'),
axis.text.x = element_text(size =30),
axis.text.y = element_text(size =30),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 45),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, colour = NA, size=1),
legend.position = '')
ggsave("test.jpg", device = "jpeg", width = 12.5, height = 10, dpi = 300)
ggsave("/home/wukai/Desktop/test.jpg", device = "jpeg", width = 12.5, height = 10, dpi = 300)
x1 =  rnorm(80, mean=8, sd=1)
y1 = rnorm(80, mean=10, sd=0.5)
x2 = rnorm(70, mean=10, sd=0.5)
y2 = rnorm(70, mean=7, sd=1)
x3 = rnorm(60, mean=5, sd=0.3)
y3 = rnorm(60, mean=4, sd=0.4)
X = append(x1,x2)
X = append(X,x3)
Y = append(y1,y2)
Y = append(Y,y3)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('high',80), rep('med',70), rep('low',60))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)+
#geom_text(data = p.value, aes(x = x, y = y, label = text), size = 16,  fontface = 'bold',show.legend = NA)+
#labs(title = 'Segmentation Accuracy in Testset', y = 'dice coefficient', x = NULL)+
#scale_x_discrete(labels= c('Kidney', 'Tumor'))+
#ylim(0,16)+
theme(plot.title = element_text(size = 45,hjust = 0.5, face = 'bold'),
axis.text.x = element_text(size =30),
axis.text.y = element_text(size =30),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 45),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, colour = NA, size=1),
legend.position = '')
x1 =  rnorm(80, mean=8, sd=1)
y1 = rnorm(80, mean=10, sd=0.5)
x2 = rnorm(70, mean=10, sd=0.5)
y2 = rnorm(70, mean=7, sd=1)
x3 = rnorm(60, mean=5, sd=0.3)
y3 = rnorm(60, mean=6, sd=0.8)
X = append(x1,x2)
X = append(X,x3)
Y = append(y1,y2)
Y = append(Y,y3)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('high',80), rep('med',70), rep('low',60))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)+
#geom_text(data = p.value, aes(x = x, y = y, label = text), size = 16,  fontface = 'bold',show.legend = NA)+
#labs(title = 'Segmentation Accuracy in Testset', y = 'dice coefficient', x = NULL)+
#scale_x_discrete(labels= c('Kidney', 'Tumor'))+
#ylim(0,16)+
theme(plot.title = element_text(size = 45,hjust = 0.5, face = 'bold'),
axis.text.x = element_text(size =30),
axis.text.y = element_text(size =30),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 45),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, colour = NA, size=1),
legend.position = '')
x1 =  rnorm(80, mean=8, sd=1)
y1 = rnorm(80, mean=10, sd=0.5)
x2 = rnorm(70, mean=10, sd=0.5)
y2 = rnorm(70, mean=7, sd=1)
x3 = rnorm(60, mean=7, sd=0.3)
y3 = rnorm(60, mean=6, sd=0.8)
X = append(x1,x2)
X = append(X,x3)
Y = append(y1,y2)
Y = append(Y,y3)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('high',80), rep('med',70), rep('low',60))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)+
#geom_text(data = p.value, aes(x = x, y = y, label = text), size = 16,  fontface = 'bold',show.legend = NA)+
#labs(title = 'Segmentation Accuracy in Testset', y = 'dice coefficient', x = NULL)+
#scale_x_discrete(labels= c('Kidney', 'Tumor'))+
#ylim(0,16)+
theme(plot.title = element_text(size = 45,hjust = 0.5, face = 'bold'),
axis.text.x = element_text(size =30),
axis.text.y = element_text(size =30),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 45),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, colour = NA, size=1),
legend.position = '')
x1 =  rnorm(80, mean=8, sd=1)
y1 = rnorm(80, mean=10, sd=0.5)
x2 = rnorm(70, mean=10, sd=0.5)
y2 = rnorm(70, mean=7, sd=1)
x3 = rnorm(60, mean=7, sd=0.9)
y3 = rnorm(60, mean=6, sd=0.8)
X = append(x1,x2)
X = append(X,x3)
Y = append(y1,y2)
Y = append(Y,y3)
datatable  <- data.frame(X, Y)
datatable$type <- c(rep('high',80), rep('med',70), rep('low',60))
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 2)+
#geom_text(data = p.value, aes(x = x, y = y, label = text), size = 16,  fontface = 'bold',show.legend = NA)+
#labs(title = 'Segmentation Accuracy in Testset', y = 'dice coefficient', x = NULL)+
#scale_x_discrete(labels= c('Kidney', 'Tumor'))+
#ylim(0,16)+
theme(plot.title = element_text(size = 45,hjust = 0.5, face = 'bold'),
axis.text.x = element_text(size =30),
axis.text.y = element_text(size =30),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 45),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, colour = NA, size=1),
legend.position = '')
ggsave("/home/wukai/Desktop/test.jpg", device = "jpeg", width = 12.5, height = 10, dpi = 300)
ggplot(datatable, aes(x = X, y = Y, colour = type))+
geom_point(size = 4)+
#geom_text(data = p.value, aes(x = x, y = y, label = text), size = 16,  fontface = 'bold',show.legend = NA)+
#labs(title = 'Segmentation Accuracy in Testset', y = 'dice coefficient', x = NULL)+
#scale_x_discrete(labels= c('Kidney', 'Tumor'))+
#ylim(0,16)+
theme(plot.title = element_text(size = 45,hjust = 0.5, face = 'bold'),
axis.text.x = element_text(size =30),
axis.text.y = element_text(size =30),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 45),
legend.background = element_blank(),
legend.key = element_rect(fill = NA, colour = NA, size=1),
legend.position = '')
ggsave("/home/wukai/Desktop/test.jpg", device = "jpeg", width = 12.5, height = 10, dpi = 300)
clinical_info <- read.csv('/home/wukai/Desktop/clinical_all_rcc_dict.csv',header = TRUE, sep =',')
clinical_info
library('dplyr')
grade_info <- read.table('/home/wukai/Desktop/bioinfo/renal_cancer_grade_info.txt', header = TRUE, sep = '\t')
grade_info
grade_info <- grade_info[,c(1,3,2)]
colnames(grade_info) <- c('case_id', 'grade','grade_name')
clinical_info <- left_join(clinical_info,grade_info, by = 'case_id')
clinical_info
grade_info
clinical_info <- read.csv('/home/wukai/Desktop/clinical_all_rcc_dict.csv',header = TRUE, sep =',')
head(clinical_info)
clinical_info <- clinical_info[,1:6]
clinical_info
clinical_info <- left_join(clinical_info,grade_info, by = 'case_id')
clinical_info
write.csv(clinical_info, '/home/wukai/Desktop/clinical_info_all_cases.csv', quote = FALSE, row.names = FALSE)
#!/usr/bin/R
library('dplyr')
library('tibble')
#library('Rtsne')
library('rsq')
library('pheatmap')
setwd('/home/wukai/Desktop/bioinfo')
# load dataset
datatable = read.table('images_genomic_features_table.txt', header = TRUE, sep = '\t')
#features_table = datatable[,c(1,3,12,14,16:103)]
#features_table = datatable[,1:101]
rownames(features_table) <- NULL
features_table <- column_to_rownames(features_table, var = 'case_id')
remove_case1 <- c('TCGA-CZ-4865','TCGA-B0-4713','TCGA-DV-5565','TCGA-CJ-4920','TCGA-BP-5192','TCGA-B0-5697','TCGA-KM-8441','TCGA-BP-4965')
remove_case2 <- c('TCGA-B0-5697','TCGA-BP-5192','TCGA-CJ-4907','TCGA-B0-5085','TCGA-DW-5560','TCGA-BP-4965','TCGA-KN-8430')
remove_case3 <- c('TCGA-CZ-5462','TCGA-KM-8438')
remove_case4 <- c('TCGA-G7-A8LB','TCGA-B8-5162')
features_table <- features_table[-c(143,1,150,127,91,8,165.69),]
features_table <- features_table[-c(8,98,122,5,147,67,165),]
# load dataset
datatable = read.table('images_genomic_features_table.txt', header = TRUE, sep = '\t')
#features_table = datatable[,c(1,3,12,14,16:103)]
features_table = datatable[,1:101]
rownames(features_table) <- NULL
features_table <- column_to_rownames(features_table, var = 'case_id')
remove_case1 <- c('TCGA-CZ-4865','TCGA-B0-4713','TCGA-DV-5565','TCGA-CJ-4920','TCGA-BP-5192','TCGA-B0-5697','TCGA-KM-8441','TCGA-BP-4965')
remove_case2 <- c('TCGA-B0-5697','TCGA-BP-5192','TCGA-CJ-4907','TCGA-B0-5085','TCGA-DW-5560','TCGA-BP-4965','TCGA-KN-8430')
remove_case3 <- c('TCGA-CZ-5462','TCGA-KM-8438')
remove_case4 <- c('TCGA-G7-A8LB','TCGA-B8-5162')
features_table <- features_table[-c(143,1,150,127,91,8,165.69),]
features_table <- features_table[-c(8,98,122,5,147,67,165),]
features_table <- features_table[-c(137,151),]
features_table <- features_table[-c(146,20),]
normalize <- function(values){
min_value <- min(values)
max_value <- max(values)
return((values - min_value)/(max_value - min_value))
}
features_table <- column_to_rownames(features_table, var = 'case_id')
anno <- features_table[,90:91]
normalized_features_table <- t(apply(features_table[,-c(90,91)],2,normalize))
EMT_label <- c()
EMT_label[which(anno$EMT_score > 0)] = 1
EMT_label[which(anno$EMT_score <= 0)] = 0
anno$EMT_label <- EMT_label
write.csv(rownames_to_column(cbind(t(normalized_features_table),anno), var = 'case_id') , 'features_table_for_emt_cls.csv', row.names = FALSE)
# load dataset
datatable = read.table('images_genomic_features_table.txt', header = TRUE, sep = '\t')
#features_table = datatable[,c(1,3,12,14,16:103)]
features_table = datatable[,1:101]
rownames(features_table) <- NULL
features_table <- column_to_rownames(features_table, var = 'case_id')
remove_case1 <- c('TCGA-CZ-4865','TCGA-B0-4713','TCGA-DV-5565','TCGA-CJ-4920','TCGA-BP-5192','TCGA-B0-5697','TCGA-KM-8441','TCGA-BP-4965')
remove_case2 <- c('TCGA-B0-5697','TCGA-BP-5192','TCGA-CJ-4907','TCGA-B0-5085','TCGA-DW-5560','TCGA-BP-4965','TCGA-KN-8430')
remove_case3 <- c('TCGA-CZ-5462','TCGA-KM-8438')
remove_case4 <- c('TCGA-G7-A8LB','TCGA-B8-5162')
features_table <- features_table[-c(143,1,150,127,91,8,165.69),]
features_table <- features_table[-c(8,98,122,5,147,67,165),]
features_table <- features_table[-c(137,151),]
features_table <- features_table[-c(146,20),]
normalize <- function(values){
min_value <- min(values)
max_value <- max(values)
return((values - min_value)/(max_value - min_value))
}
features_table <- column_to_rownames(features_table, var = 'case_id')
features_table
#!/usr/bin/R
library('dplyr')
library('tibble')
#library('Rtsne')
library('rsq')
library('pheatmap')
setwd('/home/wukai/Desktop/bioinfo')
# load dataset
datatable = read.table('images_genomic_features_table.txt', header = TRUE, sep = '\t')
datatable
#features_table = datatable[,c(1,3,12,14,16:103)]
features_table = datatable[,1:103]
features_table
rownames(features_table) <- NULL
features_table <- column_to_rownames(features_table, var = 'case_id')
remove_case1 <- c('TCGA-CZ-4865','TCGA-B0-4713','TCGA-DV-5565','TCGA-CJ-4920','TCGA-BP-5192','TCGA-B0-5697','TCGA-KM-8441','TCGA-BP-4965')
remove_case2 <- c('TCGA-B0-5697','TCGA-BP-5192','TCGA-CJ-4907','TCGA-B0-5085','TCGA-DW-5560','TCGA-BP-4965','TCGA-KN-8430')
remove_case3 <- c('TCGA-CZ-5462','TCGA-KM-8438')
remove_case4 <- c('TCGA-G7-A8LB','TCGA-B8-5162')
features_table <- features_table[-c(143,1,150,127,91,8,165.69),]
features_table <- features_table[-c(8,98,122,5,147,67,165),]
features_table <- features_table[-c(137,151),]
features_table <- features_table[-c(146,20),]
normalize <- function(values){
min_value <- min(values)
max_value <- max(values)
return((values - min_value)/(max_value - min_value))
}
features_table <- column_to_rownames(features_table, var = 'case_id')
features_table
anno <- features_table[,101:102]
anno
normalized_features_table <- t(apply(features_table[,-c(101:102)],2,normalize))
EMT_label <- c()
EMT_label[which(anno$EMT_score > 0)] = 1
EMT_label[which(anno$EMT_score <= 0)] = 0
anno$EMT_label <- EMT_label
anno
write.csv(rownames_to_column(cbind(t(normalized_features_table),anno), var = 'case_id') , 'features_table_for_emt_cls.csv', row.names = FALSE)
